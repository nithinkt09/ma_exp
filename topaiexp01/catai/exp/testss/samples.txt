

class Morphism:

    """
    represents a transformation or arrow between objects 
        - source: domanin object 
        - target: codomain object
        - fn: a callable function that transforms source.data to produce a new object data
        - description: optional description about transformation

        upon initiliazation morphism validates if the function applied gives target or subset object if not throws an error
    """
    def __init__(self, 
                 source: DataObject, target: DataObject, 
                 fn: Callable[[DataObject], DataObject], 
                 description: str = "morphism"):

        self.source = source
        self.target = target
        self.fn = fn
        self.description = description
        self._validate_morphism()


    
    def _validate_morphism(self):
        """
        validates the morphism by applying transformation function to the source's data where the result must be equal to or a subset of target
        """
        ####